[{"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/index.js":"1","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/Routes.js":"2","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Home.js":"3","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/authentication/Signup.js":"4","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/authentication/Signin.js":"5","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Base.js":"6","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/ProductCard.js":"7","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Navbar.js":"8","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/authentication/authenticationAPIcall.js":"9","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/AdminDashboard.js":"10","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/AdminRoute.js":"11","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/CreateCategory.js":"12","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/CreateProduct.js":"13","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/ManageProduct.js":"14","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/ManageOrders.js":"15","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/ManageCategory.js":"16","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/AdminMenu.js":"17","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/APIcalls.js":"18","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/UpdateCategory.js":"19","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/UpdateProduct.js":"20","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Cart.js":"21","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/CartFunctions.js":"22"},{"size":410,"mtime":1609759388350,"results":"23","hashOfConfig":"24"},{"size":1761,"mtime":1610026057972,"results":"25","hashOfConfig":"24"},{"size":2319,"mtime":1609962658751,"results":"26","hashOfConfig":"24"},{"size":3335,"mtime":1609762268930,"results":"27","hashOfConfig":"24"},{"size":2662,"mtime":1609956116308,"results":"28","hashOfConfig":"24"},{"size":2805,"mtime":1609953664928,"results":"29","hashOfConfig":"24"},{"size":2056,"mtime":1610038840410,"results":"30","hashOfConfig":"24"},{"size":2189,"mtime":1610026088692,"results":"31","hashOfConfig":"24"},{"size":1629,"mtime":1609790322291,"results":"32","hashOfConfig":"24"},{"size":1057,"mtime":1609962093911,"results":"33","hashOfConfig":"24"},{"size":646,"mtime":1609826184743,"results":"34","hashOfConfig":"24"},{"size":2461,"mtime":1609862649198,"results":"35","hashOfConfig":"24"},{"size":4749,"mtime":1609948569187,"results":"36","hashOfConfig":"24"},{"size":2079,"mtime":1609959807220,"results":"37","hashOfConfig":"24"},{"size":3731,"mtime":1610026007276,"results":"38","hashOfConfig":"24"},{"size":2113,"mtime":1609945522511,"results":"39","hashOfConfig":"24"},{"size":1285,"mtime":1609828496474,"results":"40","hashOfConfig":"24"},{"size":5067,"mtime":1610021544189,"results":"41","hashOfConfig":"24"},{"size":3422,"mtime":1609965869628,"results":"42","hashOfConfig":"24"},{"size":5688,"mtime":1610004584240,"results":"43","hashOfConfig":"24"},{"size":4564,"mtime":1610041383867,"results":"44","hashOfConfig":"24"},{"size":1165,"mtime":1610041143949,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1wmshc6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/index.js",["104"],"import React from 'react';\nimport Routes from './Routes';\nimport ReactDOM from 'react-dom'\nimport { Route } from 'react-router-dom';\n\n\nReactDOM.render(<Routes />,document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["105","106"],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/Routes.js",["107"],"import React from 'react'\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport AdminDashboard from './admin/AdminDashboard';\nimport AdminRoute from './admin/AdminRoute';\nimport CreateCategory from './admin/CreateCategory';\nimport Signin from './authentication/Signin';\nimport Signup from './authentication/Signup';\nimport Home from \"./core/Home\";\nimport ManageCategory from \"./admin/ManageCategory\";\nimport CreateProduct from \"./admin/CreateProduct\";\nimport ManageProduct from \"./admin/ManageProduct\";\nimport ManageOrders from \"./admin/ManageOrders\"\nimport UpdateCategory from './admin/UpdateCategory'\nimport UpdateProduct from './admin/UpdateProduct';\nimport Cart from './core/Cart';\n\n\n\n\nexport default function Routes() {\n    return (\n        <BrowserRouter>\n            <switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/signin\" exact component={Signin}/>\n                <Route path=\"/signup\" exact component={Signup}/>\n                <Route path=\"/cart\" exact component={Cart}/>\n                <AdminRoute path=\"/admin/create/category\" exact component={CreateCategory}/>\n                <AdminRoute path=\"/admin/manage/category\" exact component={ManageCategory}/>\n                <AdminRoute path=\"/admin/create/product\" exact component={CreateProduct}/>\n                <AdminRoute path=\"/admin/manage/product\" exact component={ManageProduct}/>\n                <AdminRoute path=\"/admin/manage/orders\" exact component={ManageOrders}/>\n                <AdminRoute path=\"/admin/update/category/:categoryId\" exact component={UpdateCategory}/>\n                <AdminRoute path=\"/admin/update/product/:productId\" exact component={UpdateProduct}/>\n            </switch>   \n        </BrowserRouter>\n     )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Home.js",[],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/authentication/Signup.js",["108"],"import React,{useState} from 'react'\nimport Base from \"../core/Base\"\nimport {Link} from \"react-router-dom\"\nimport Form from 'react-bootstrap/Form'\nimport Button from \"react-bootstrap/Button\"\nimport Col from 'react-bootstrap/Col'\nimport { signup } from './authenticationAPIcall'\nimport Alert from 'react-bootstrap/Alert'\n\n\nexport default function Signup() {\n\n    const[values,setValues] = useState({\n        user_name:\"\",\n        email:\"\",\n        password:\"\",\n        mobile_no:\"\",\n        error:\"\",\n        success:false\n    });\n    \n    const{user_name,email,password,mobile_no,error,success} = values;\n\n    const handleChange = name => event => {\n        setValues({...values, error:false, [name]:event.target.value})\n    }\n\n    const onSubmit = event =>{\n        event.preventDefault()\n        setValues({...values, error:false})\n        signup({user_name,email,password,mobile_no})\n        .then(data => {\n            console.log(\"Response\", data)\n            if(data.error){\n                setValues({...values, error:data.error, success:false})\n            }\n            else{\n                setValues({...values, \n                    user_name: \"\", email: \"\" , password: \"\" ,mobile_no: \"\", error: \"\", success: true})\n            }\n        })\n        .catch(console.log(\"ERROR DURING SIGNUP\"))\n    }\n\n    const successMessage = () => {\n        return(\n            <Alert variant=\"success\" style={{display:success ? \"\":\"none\"}}>\n                <Alert.Heading>Sign up successful. Please\n                    <Link to=\"/signin\"> login Here</Link>\n                </Alert.Heading>\n            </Alert>\n        )\n    }\n\n    const errorMessage = () => {\n        return(\n            <Alert variant=\"danger\" style={{display:error ? \"\":\"none\"}}>\n                <Alert.Heading>\n                    {error}\n                </Alert.Heading>\n            </Alert>\n        )\n    }\n    const signUpForm = () => {\n        return(\n            <Form className=\"p-5 border border-dark rounded\">\n            <Form.Group>\n                <Form.Label>User name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter username\" value={user_name} onChange={handleChange(\"user_name\")} />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={handleChange(\"email\")} />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handleChange(\"password\")}/>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicContact\">\n                <Form.Label>Phone number</Form.Label>\n                <Form.Control type=\"tel\" placeholder=\"Contact info\" value={mobile_no} onChange={handleChange(\"mobile_no\")} />\n            </Form.Group>\n            <Button onClick={onSubmit} variant=\"success\" type=\"submit\">\n                Submit\n            </Button>\n        </Form>\n        \n        )\n    }\n\n    return (\n        <Base title=\"Sign up\" description=\"Create an account here\">\n            {successMessage()}\n            {errorMessage()}\n            {signUpForm()}\n        </Base>\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/authentication/Signin.js",["109","110"],"import React,{useState} from 'react'\nimport Base from \"../core/Base\"\nimport Form from 'react-bootstrap/Form'\nimport Button from \"react-bootstrap/Button\"\nimport {authenticate,signin} from \"./authenticationAPIcall\"\nimport Alert from 'react-bootstrap/Alert'\nimport Spinner from 'react-bootstrap/Spinner'\nimport {Redirect} from 'react-router-dom'\n\n\nexport default function Signin() {\n\n    const[values,setValues] = useState({\n        email:\"\",\n        password:\"\",\n        success:false,\n        loading:\"\",\n        error:\"\",\n        didRedirect:false\n    })\n\n    const{email,password,success,loading,error} = values;\n\n    const handleChange = name => event => {\n        setValues({...values, error:false, [name]:event.target.value})\n    }\n\n    const onSubmit = event => {\n        event.preventDefault();\n        setValues({...values, loading:true})\n        signin({email,password})\n        .then(data=>{\n            console.log(data)\n            if(data.error){\n                setValues({...values, error:data.error ,loading:false})\n                console.log(error)\n            }\n            else{\n               authenticate(data, () => {\n                    setValues({...values,didRedirect:true,success:true,loading:true})\n               })\n            }\n        }) \n    }\n\n\n\n    const errorMessage = () => {\n        return(\n            <Alert variant=\"danger\" style={{display:error ? \"\":\"none\"}}>\n                <Alert.Heading>\n                    {error}\n                </Alert.Heading>\n            </Alert>\n        )\n    }\n\n    const successMessage = () =>{\n        if(success){\n            return(\n                <Redirect to=\"/\"></Redirect>\n            )\n        }\n    }\n\n\n\n    const signInForm = () => {\n        return(\n            <Form className=\"p-5 border border-dark rounded\">\n                <Form.Group>\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={handleChange(\"email\")}/>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handleChange(\"password\")} />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </Form>\n        )\n    }\n\n    return (\n        \n            <Base title=\"Sign in\" description=\"Please Sign in here\">\n                {successMessage()}\n                {errorMessage()}\n                {signInForm()}\n            </Base>\n\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Base.js",[],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/ProductCard.js",["111","112","113","114","115","116","117","118"],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Navbar.js",["119","120"],"import React,{Fragment} from 'react'\nimport {Link, withRouter} from \"react-router-dom\"\nimport logo from '../Fantom.png';\nimport {signout,isauthenticated} from '../authentication/authenticationAPIcall'\n\nconst currentTab = (history,path) => {\n    if(history.location.pathname ===path){\n        return {color:\"#000000\"}\n    }\n    else{\n        return {color:\"#FFFFFF\"}\n    }\n}\n\nconst Navbar = ({history}) => {\n    return (\n        <div className=\"bg-danger mw-100\">\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-brand\">\n                   <Link className=\"nav-link\" to=\"/\"> <img src={logo} height=\"70\" width=\"300\"></img></Link>\n                </li>\n                <li className=\"nav-item ml-auto\">\n                    <Link style={currentTab(history,\"/\")} className=\"nav-link\" to=\"/\">Home</Link>\n                </li>\n                {isauthenticated() && isauthenticated().user.role==1 && (\n                    <li className=\"nav-item\">\n                        <Link style={currentTab(history,\"/admin/create/category\")} className=\"nav-link\" to=\"/admin/create/category\">Dashboard</Link>\n                    </li>\n                )}\n                {!isauthenticated() && <Fragment>\n                    <li className=\"nav-item\">\n                    <Link style={currentTab(history,\"/signin\")} className=\"nav-link \" to=\"/signin\">Sign in</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link style={currentTab(history,\"/signup\")} className=\"nav-link \" to=\"/signup\">Sign up</Link>\n                </li>\n                </Fragment>}\n                {isauthenticated() && (<li className=\"nav-item\">\n                    <span style={currentTab(history,\"signout\")} className=\"nav-link \" onClick={() => {\n                        signout(() => {\n                        history.push(\"/\")\n                        })\n                    }}>Sign out</span>\n                </li>)}\n                <li className=\"nav-item\">\n                    <Link style={currentTab(history,\"/cart\")} className=\"nav-link \" to=\"/cart\">Cart</Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default withRouter(Navbar);\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/authentication/authenticationAPIcall.js",[],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/AdminDashboard.js",["121","122","123","124","125"],"import Base from \"../core/Base\";\nimport React from 'react'\nimport{isauthenticated} from \"../authentication/authenticationAPIcall\"\nimport {Link} from 'react-router-dom';\nimport {Col,Tab,Row,ListGroup} from 'react-bootstrap'\nimport CreateCategory from \"./CreateCategory\";\nimport AdminMenu from \"./AdminMenu\";\n\n\nexport default function AdminDashboard({title=\"Admin Information\",className, children}) {\n\n    const AdminInfo = () => {\n      return(\n        <div>\n          <h4 className=\"text=left\">Name:</h4><span><h6>{isauthenticated().user.user_name}</h6></span>\n        </div>\n\n      )\n    }\n\n    return (\n        <Base title=\"Admin Panel\" description=\"Welcome to Admin Page\">\n            <Row className=\"h-100 d-flex justify-content-center\">\n                {AdminMenu()}\n              <Col sm={8} className=\"border border-danger rounded p-auto  mh-100\">\n                <h2 className=\"bg-danger text-white text-center\">{title}</h2>\n                <div className={className}>{children}</div>\n              </Col>\n            </Row>\n        </Base>\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/AdminRoute.js",["126"],"import React, { Component } from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {isauthenticated} from \"../authentication/authenticationAPIcall\";\n\n\nconst AdminRoute= ({ component: Component, ...rest })=> {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isauthenticated() && isauthenticated().user.role ===1? (\n            <Component {...props}/>\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  };\n  \n\nexport default AdminRoute;\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/CreateCategory.js",[],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/CreateProduct.js",[],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/ManageProduct.js",["127"],"import React,{useState,useEffect} from 'react'\nimport AdminDashboard from './AdminDashboard'\nimport {AllProducts,DeleteProduct} from \"./APIcalls\"\nimport { isauthenticated } from '../authentication/authenticationAPIcall'\nimport {Link} from \"react-router-dom\"\n\nexport default function ManageProduct() {\n\n    const [Products, setProducts] = useState([])\n\n    const{token}=isauthenticated();\n    const user_id = isauthenticated().user.user_id;\n\n    const preload = () => {\n        AllProducts()\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                setProducts(data);\n                console.log(Products)\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload();\n    }, [])\n    \n    const DeleteThisCategory = ProductId => {\n        DeleteProduct(user_id,token,ProductId)\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                preload();\n            }\n        })\n    }\n\n\n\n    return (\n       <AdminDashboard title=\"Manage Products\">\n           <h5 className=\"text-right text-dark my-3\">Total Products: {Object.keys({...Products}).length}</h5>\n            {Products.map((product,index)=>(\n            <div key={index} className=\"row text-center p-3 border\">\n              <div className=\"col-4\">\n                <h4 className=\"text-dark text-center\">{product.p_name}</h4>\n              </div>\n              <div className=\"col-4\">\n                <Link\n                  className=\"btn btn-success\"\n                  to={`/admin/update/product/${product.p_id}`}\n                >\n                  <span className=\"\">Update</span>\n                </Link>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={() => {\n                    DeleteThisCategory(product.p_id)\n                }} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n            ))}\n       </AdminDashboard>\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/ManageOrders.js",["128","129"],"import React,{useState,useEffect} from 'react'\nimport AdminDashboard from './AdminDashboard'\nimport {AllOrders,DeleteOrder, UpdateOrderAPI} from \"./APIcalls\"\nimport { isauthenticated } from '../authentication/authenticationAPIcall'\nimport {Link} from \"react-router-dom\"\n\n    \n\nexport default function ManageOrders() {\n\n    const [Orders, setOrders] = useState([])\n\n    const{token}=isauthenticated();\n    const user_id = isauthenticated().user.user_id;\n\n    const preload = () => {\n        AllOrders(user_id,token)\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                setOrders(data);\n                console.log(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload();\n    }, [])\n\n    \n    const DeleteThisOrder = OrderId => {\n        DeleteOrder(user_id,token,OrderId)\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                preload();\n            }\n        })\n    }\n\n    \n    const [Status, setStatus] = useState(\" \")\n\n    const [Order_id, setOrder_id] = useState(\" \")\n\n    const UpdateThisOrder = (status, OrderId) => {\n        UpdateOrderAPI(user_id,token,OrderId,{status})\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                preload();\n            }\n        })\n    }\n   \n\n\n    return (\n        <AdminDashboard title=\"Manage Orders\">\n            <h5 className=\"text-right text-dark my-3\">Total Orders: {Object.keys({...Orders}).length}</h5>\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">Order ID</th>\n                    <th scope=\"col\">Customer Name</th>\n                    <th scope=\"col\">Product</th>\n                    <th scope=\"col\">Quantity</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">  </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Orders.map((order,index)=>(\n                        <tr key={index}>\n                            <th scope=\"row\">{order.order_id}</th>\n                            <td> </td>\n                            <td>{order.p_name}</td>\n                            <td>{order.quantity}</td>\n                            <td>\n                                <select onChange = {(event)=>{\n                                    setStatus(event.target.value)\n                                    setOrder_id(order.order_id);\n                                    UpdateThisOrder(Status,Order_id);\n                                }} className=\"form-control\" placeholder=\"Status\">\n                                    <option>{order.status}</option>\n                                    <option value=\"Approved\">Approved</option>\n                                    <option value=\"Ready to Dispatch\">Ready To Dispatch</option>\n                                    <option value=\"Dispatched\">Dispatched</option>\n                                    <option value=\"Shipped\">Shipped</option>\n                                    <option value=\"Delivered\">Delivered</option>\n                                </select>\n                            </td>\n                            <td><button onClick={() =>{\n                                 DeleteThisOrder(order.order_id)\n                            }} className=\"btn btn-danger\">\n                                Cancel \n                        </button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            \n        </AdminDashboard>\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/ManageCategory.js",["130"],"import React,{useState,useEffect} from 'react'\nimport { isauthenticated } from '../authentication/authenticationAPIcall'\nimport AdminDashboard from './AdminDashboard'\nimport {AllCategories,DeleteCategory} from \"./APIcalls\"\nimport {Link} from \"react-router-dom\"\n\nexport default function ManageCategory() {\n    const [Category, setCategory] = useState([])\n\n    const{token}=isauthenticated();\n    const user_id = isauthenticated().user.user_id;\n\n    const preload = () => {\n        AllCategories()\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                setCategory(data);\n                console.log(Category)\n            }\n        })\n    }\n\n    useEffect(() => {\n        preload();\n    }, [])\n\n    const DeleteThisCategory = CategoryId => {\n        DeleteCategory(user_id,token,CategoryId)\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                preload();\n            }\n        })\n    }\n\n\n    return (\n        <AdminDashboard title=\"Manage Category\">\n            <h5 className=\"text-right text-dark my-3\">Total Categories: {Object.keys({...Category}).length}</h5>\n            {Category.map((category,index)=>(\n            <div key={index} className=\"row text-center p-3 border\">\n              <div className=\"col-4\">\n                <h4 className=\"text-dark text-center\">{category.category_name}</h4>\n              </div>\n              <div className=\"col-4\">\n                <Link\n                  className=\"btn btn-success\"\n                  to={`/admin/update/category/${category.category_id}`}\n                >\n                  <span className=\"\">Update</span>\n                </Link>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={() => {\n                    DeleteThisCategory(category.category_id)\n                }} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n            ))}\n        </AdminDashboard>\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/AdminMenu.js",["131","132","133"],"import React from 'react'\nimport { ListGroupItem } from 'react-bootstrap'\nimport {Link, withRouter} from \"react-router-dom\"\nimport ListGroup from \"react-bootstrap/ListGroup\"\n\nconst change = () => {\n    return \"red\"\n}\n\nconst AdminMenu = () => {\n    return(\n        <ListGroup>\n            <Link to=\"/admin/create/category\">\n                <ListGroup.Item  variant=\"dark\" action>\n                    Create Category\n                </ListGroup.Item>\n            </Link>\n            <Link to=\"/admin/manage/category\" >\n                <ListGroup.Item variant=\"dark\" action>\n                    Manage Category\n                </ListGroup.Item>\n            </Link>\n            <Link to=\"/admin/create/product\">\n                <ListGroup.Item variant=\"dark\" action>\n                    Create Product\n                </ListGroup.Item>\n            </Link>\n            <Link to=\"/admin/manage/product\">\n                <ListGroup.Item variant=\"dark\" action>\n                    Manage Product\n                </ListGroup.Item>\n            </Link>\n            <Link to=\"/admin/manage/orders\">\n                <ListGroup.Item variant=\"dark\" action>\n                    Manage Orders\n                </ListGroup.Item>\n            </Link>\n        </ListGroup>\n    )\n}\n\nexport default AdminMenu;","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/APIcalls.js",[],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/UpdateCategory.js",["134"],"import React,{useState,useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport Form from \"react-bootstrap/Form\"\nimport {Button,Alert,Row,Col} from \"react-bootstrap\"\nimport { isauthenticated } from '../authentication/authenticationAPIcall';\nimport {GetACategory,UpdateCategoryAPI} from \"./APIcalls\"\nimport Base from \"../core/Base\"\n\n\nexport default function UpdateCategory({match}) {\n\n    const [values, setvalues] = useState({\n        category_name:\"\",\n        error:\"\",\n        success:false\n    })\n\n    const{category_name,error,success} = values\n\n    const{token} = isauthenticated();\n    const user_id =isauthenticated().user.user_id\n\n    const preload = categoryId => {\n        GetACategory(categoryId)\n        .then(data=>{\n            console.log(data)\n            if(data.error){\n                setvalues({...values, error:true})\n            }\n            else{\n                setvalues({...values,category_name: data.category_name})\n            }\n        })\n\n    }\n\n    useEffect(() => {\n        preload(match.params.categoryId);\n    }, [])\n\n    const handleChange = name => event => {\n        setvalues({...values, error:false, [name]:event.target.value})\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        console.log({category_name})\n        setvalues({...values,error:false})\n        UpdateCategoryAPI(user_id,token,match.params.categoryId,{category_name})\n        .then(data=>{\n            console.log(data)\n            if(data.error){\n                setvalues({...values,error:data.error});\n            }\n            else{\n                setvalues({...values,error:\"\",success:true,category_name:\"\"});\n            }\n        })\n    }\n\n    const successMessage = () => {\n        return(\n            <Alert variant=\"success\" style={{display:success ? \"\":\"none\"}}>\n                <Alert.Heading>\n                    <small>Updated successfully <Link to=\"/admin/manage/category\">click here</Link></small>\n                </Alert.Heading>\n            </Alert>\n        )\n    }\n\n    const errorMessage = () => {\n        return(\n            <Alert variant=\"danger\" style={{display:error ? \"\":\"none\"}}>\n                <Alert.Heading>\n                    {error}\n                </Alert.Heading>\n            </Alert>\n        )\n    }\n\n\n    const UpdateCategoryForm = () => {\n        return(\n            <Form className=\"mt-auto mb-auto w-100\">\n                <Form.Group className=\"p-5\">\n                    <Form.Label>Enter a category</Form.Label>\n                    <Form.Control value={category_name} onChange={handleChange(\"category_name\")} type=\"text\" placeholder=\"Ex: Harry Potter\" />\n                </Form.Group>\n                <Form.Row className=\"d-flex justify-content-end\">\n                    <Button onClick={onSubmit} variant=\"success\" className=\"align-self-end m-3\">Submit</Button>\n                </Form.Row>\n            </Form>\n        )\n    }\n\n\n\n\n    return (\n        <Base title=\"Admin Panel\" description=\"Welcom to Admin Page\">\n            <Row className=\"h-100 d-flex justify-content-center border border-danger\">\n                <Col className=\" rounded p-auto  mh-100\">\n                    <h2 className=\"bg-danger text-white text-center\">Update Category</h2>\n                    {successMessage()}\n                    {errorMessage()}\n                    {UpdateCategoryForm()}\n                </Col>\n            </Row>\n        </Base>\n    )\n}\n\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/admin/UpdateProduct.js",["135","136"],"import React,{useState,useEffect} from 'react';\nimport Form from \"react-bootstrap/Form\"\nimport {Button,Alert,Row,Col} from \"react-bootstrap\"\nimport { isauthenticated } from '../authentication/authenticationAPIcall';\nimport {GetAProduct,AllCategories,UpdateProductAPI} from \"./APIcalls\"\nimport Base from \"../core/Base\"\nimport {Link} from 'react-router-dom'\n\nexport default function UpdateProduct({match}) {\n    const [Category, setCategory] = useState([])\n\n    const [values, setvalues] = useState({\n        p_name:\"\",\n        image:\"\",\n        unit_price:\"\",\n        stock:\"\",\n        description:\"\",\n        quant_unit:\"\",\n        category_id:\"\",\n        category_name:\"\",\n        success:false,\n        error:\"\"\n    })\n\n    const{p_name,image,unit_price,stock,description,quant_unit,category_id,category_name,success,error} = values;\n\n    const{token} = isauthenticated();\n    const user_id =isauthenticated().user.user_id;\n\n    const preload = productId => {\n        GetAProduct(productId)\n        .then(data=>{\n            if(data.error){\n                setvalues({...values, error:data.error})\n            }\n            else{\n                preloadCategories();\n                setvalues({...values,\n                    p_name:data.p_name,\n                    image:data.image,\n                    unit_price:data.unit_price,\n                    stock:data.stock,\n                    description:data.description,\n                    quant_unit:data.quant_unit,\n                    category_name:data.category_name\n                })\n            }\n        })\n    }\n\n    const preloadCategories = () => {\n        AllCategories()\n        .then(data => {\n            if(data.error){\n                console.log(data.error);\n            }\n            else{\n                setCategory(data);\n\n            }\n        })\n    }\n\n\n    useEffect(() => {\n        preload(match.params.productId);\n    }, [])\n\n    const handleChange = name => event => {\n        setvalues({...values, error:false, [name]:event.target.value})\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        setvalues({...values,error:false})\n        UpdateProductAPI(user_id,token,match.params.productId,{p_name,image,unit_price,stock,description,category_id})\n        .then(data=>{\n            if(data.error){\n                setvalues({...values,error:data.error});\n            }\n            else{\n                setvalues({...values,error:\"\",success:true,p_name:\"\",\n                image:\"\",\n                unit_price:\"\",\n                stock:\"\",\n                description:\"\",\n                quant_unit:0,\n                category_id:\"\"});\n            }\n        })\n    }\n\n    const UpdateProductForm = () => {\n        return(\n            <Form>\n        <Form.Label>Image</Form.Label>\n        <Form.Control placeholder=\"URL\" onChange={handleChange(\"image\")} value={image} type=\"text\"></Form.Control>\n        <Form.Row>\n            <Col>\n                <Form.Group>\n                    <Form.Label>Product name</Form.Label>\n                        <Form.Control onChange={handleChange(\"p_name\")} value={p_name} type=\"text\"  placeholder=\"Enter the name of the Product\"></Form.Control>\n                </Form.Group>\n            </Col>\n            <Col>\n            <Form.Group>\n                    <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"number\" onChange={handleChange(\"unit_price\")} value={unit_price} placeholder=\"Rs\"></Form.Control>\n                </Form.Group>\n            </Col>\n        </Form.Row>\n    <Form.Group>\n        <Form.Label>Description</Form.Label>\n        <Form.Control placeholder=\"Write a description not more than 100 words...\" as=\"textarea\" onChange={handleChange(\"description\")} value={description} rows={3}></Form.Control>\n    </Form.Group>\n    <Form.Row className=\"align-items-center\">\n        <Col className=\"my-1\">\n            <Form.Label>Stock</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"1\" onChange={handleChange(\"stock\")} value={stock}></Form.Control>\n        </Col>\n        <Col className=\"my-1\">\n            <Form.Label>Category</Form.Label>\n            <select onChange={handleChange(\"category_id\")} className=\"form-control\" placeholder=\"Category\">\n                <option>{category_name}</option>\n                {Category &&\n                    Category.map((category, index) => (\n                        <option key={index} value={category.category_id}>\n                            {category.category_name}\n                        </option>\n                 ))}\n             </select>\n        </Col>\n    </Form.Row>\n    <Form.Row className=\"d-flex justify-content-end\">\n        <Button variant=\"success\" className=\"align-self-end m-3\" onClick={onSubmit}>Submit</Button>\n    </Form.Row>\n    \n</Form>\n        )\n\n    };\n\n    const successMessage = () => {\n        return(\n            <Alert variant=\"success\" style={{display:success ? \"\":\"none\"}}>\n                <Alert.Heading>\n                    <small>Updated successfully <Link to=\"/admin/manage/product\">click here</Link></small>\n                </Alert.Heading>\n            </Alert>\n        )\n    }\n\n\n    return (\n        <Base title=\"Admin Panel\" description=\"Welcom to Admin Page\">\n            <Row className=\"h-100 d-flex justify-content-center border border-danger\">\n                <Col className=\" rounded p-auto  mh-100\">\n                    <h2 className=\"bg-danger text-white text-center\">Update Product</h2>\n                    <h3 className=\"text-right\">Units Sold : {quant_unit}</h3>\n                    {successMessage()}\n                    {UpdateProductForm()}\n                </Col>\n            </Row>\n        </Base>\n    )\n}\n","/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/Cart.js",["137","138"],"/Users/sanjanashivanand/Desktop/dbmd_proj/frontend/src/core/CartFunctions.js",[],{"ruleId":"139","severity":1,"message":"140","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":15},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"139","severity":1,"message":"147","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":22},{"ruleId":"139","severity":1,"message":"148","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":11},{"ruleId":"139","severity":1,"message":"149","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":15},{"ruleId":"139","severity":1,"message":"150","line":22,"column":34,"nodeType":"141","messageId":"142","endLine":22,"endColumn":41},{"ruleId":"139","severity":1,"message":"151","line":2,"column":9,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},{"ruleId":"139","severity":1,"message":"148","line":2,"column":14,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},{"ruleId":"139","severity":1,"message":"152","line":2,"column":18,"nodeType":"141","messageId":"142","endLine":2,"endColumn":21},{"ruleId":"139","severity":1,"message":"153","line":2,"column":22,"nodeType":"141","messageId":"142","endLine":2,"endColumn":28},{"ruleId":"139","severity":1,"message":"154","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":23},{"ruleId":"139","severity":1,"message":"155","line":31,"column":15,"nodeType":"141","messageId":"142","endLine":31,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":35,"column":29,"nodeType":"158","messageId":"159","endLine":35,"endColumn":31},{"ruleId":"160","severity":1,"message":"161","line":59,"column":41,"nodeType":"162","endLine":59,"endColumn":105},{"ruleId":"160","severity":1,"message":"161","line":20,"column":55,"nodeType":"162","endLine":20,"endColumn":95},{"ruleId":"156","severity":1,"message":"157","line":25,"column":66,"nodeType":"158","messageId":"159","endLine":25,"endColumn":68},{"ruleId":"139","severity":1,"message":"163","line":4,"column":9,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"164","line":5,"column":13,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"165","line":5,"column":21,"nodeType":"141","messageId":"142","endLine":5,"endColumn":30},{"ruleId":"139","severity":1,"message":"166","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":22},{"ruleId":"139","severity":1,"message":"167","line":12,"column":11,"nodeType":"141","messageId":"142","endLine":12,"endColumn":20},{"ruleId":"139","severity":1,"message":"168","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":29,"column":8,"nodeType":"171","endLine":29,"endColumn":10,"suggestions":"172"},{"ruleId":"139","severity":1,"message":"163","line":5,"column":9,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":31,"column":8,"nodeType":"171","endLine":31,"endColumn":10,"suggestions":"173"},{"ruleId":"169","severity":1,"message":"170","line":28,"column":8,"nodeType":"171","endLine":28,"endColumn":10,"suggestions":"174"},{"ruleId":"139","severity":1,"message":"175","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":23},{"ruleId":"139","severity":1,"message":"176","line":3,"column":15,"nodeType":"141","messageId":"142","endLine":3,"endColumn":25},{"ruleId":"139","severity":1,"message":"177","line":6,"column":7,"nodeType":"141","messageId":"142","endLine":6,"endColumn":13},{"ruleId":"169","severity":1,"message":"178","line":39,"column":8,"nodeType":"171","endLine":39,"endColumn":10,"suggestions":"179"},{"ruleId":"139","severity":1,"message":"180","line":25,"column":98,"nodeType":"141","messageId":"142","endLine":25,"endColumn":103},{"ruleId":"169","severity":1,"message":"181","line":67,"column":8,"nodeType":"171","endLine":67,"endColumn":10,"suggestions":"182"},{"ruleId":"139","severity":1,"message":"183","line":2,"column":21,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":29,"column":38,"nodeType":"186","messageId":"187","endLine":29,"endColumn":40},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["188"],"no-negated-in-lhs",["189"],"'AdminDashboard' is defined but never used.","'Col' is defined but never used.","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'addItemToCart' is defined but never used.","'count' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Tab' is defined but never used.","'ListGroup' is defined but never used.","'CreateCategory' is defined but never used.","'AdminInfo' is assigned a value but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["190"],["191"],["192"],"'ListGroupItem' is defined but never used.","'withRouter' is defined but never used.","'change' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.categoryId' and 'preload'. Either include them or remove the dependency array.",["193"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["194"],"'Alert' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"195","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [preload]",{"range":"203","text":"204"},{"range":"205","text":"204"},{"range":"206","text":"204"},"Update the dependencies array to be: [match.params.categoryId, preload]",{"range":"207","text":"208"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"209","text":"210"},[769,771],"[preload]",[787,789],[774,776],[1061,1063],"[match.params.categoryId, preload]",[1899,1901],"[match.params.productId, preload]"]